
Program: bamToBed (v2.3.3)
Author:  Aaron Quinlan (aaronquinlan@gmail.com)
Summary: Converts BAM alignments to BED6 or BEDPE format.

Usage:   bamToBed [OPTIONS] -i <bam> 

Options: 
	-bedpe	Write BEDPE format.

	-ed	Use BAM edit distance (NM tag) for score.
		Default is to use mapping quality.
		Not available for BEDPE format.


Program: closestBed (v2.3.3)
Author:  Aaron Quinlan (aaronquinlan@gmail.com)
Summary: For each feature in BED A, finds the closest 
		 feature (upstream or downstream) in BED B.

Usage:   closestBed [OPTIONS] -a <a.bed> -b <b.bed>

Options: 
	-s	Force strandedness.  That is, find the closest feature in B
		that overlaps A on the same strand.
		- By default, overlaps are reported without respect to strand.

	-t	How ties for closest feature are handled.  This occurs when two
		features in B have exactly the same overlap with A.
		By default, all such features in B are reported.
		Here are all the options:
		- "all"  Report all ties (default).
		- "first"  Report the first tie that occurred in the B file.
		- "last"  Report the last tie that occurred in the B file.

Notes: 
	Reports "none" for chrom and "-1" for all other fields when a feature
	is not found in B on the same chromosome as the feature in A.
	E.g. none	-1	-1


Program: complementBed (v2.3.3)
Author:  Aaron Quinlan (aaronquinlan@gmail.com)
Summary: Returns the base pair complement of a BED file.

Usage:   complementBed [OPTIONS] -i <bed> -g <genome>

Notes: 
	(1)  The genome file should tab delimited and structured as follows:
	     <chromName><TAB><chromSize>

	For example, Human (hg19):
	chr1	249250621
	chr2	243199373
	...
	chr18_gl000207_random	4262

Tips: 
	One can use the UCSC Genome Browser's MySQL database to extract
	chromosome sizes. For example, H. sapiens:

	mysql --user=genome --host=genome-mysql.cse.ucsc.edu -A -e /
	"select chrom, size from hg19.chromInfo"  > hg19.genome


Program: coverageBed (v2.3.3)
Author:  Aaron Quinlan (aaronquinlan@gmail.com)
Summary: Returns the depth and breadth of coverage of features from A
		 on the intervals in B.

Usage:   coverageBed [OPTIONS] -a <a.bed> -b <b.bed>

Options: 
	-s	Force strandedness.  That is, only include hits in A that
		overlap B on the same strand.
		- By default, hits are included without respect to strand.

Output:  
	 After each entry in B, reports: 
	  1) The number of features in A that overlapped the B interval.
	  2) The number of bases in B that had non-zero coverage.
	  3) The length of the entry in B.
	  4) The fraction of bases in B that had non-zero coverage.

Program: fastaFromBed (v2.3.3)
Author:  Aaron Quinlan (aaronquinlan@gmail.com)
Summary: Extract DNA sequences into a fasta file based on BED coordinates.

Usage:   fastaFromBed [OPTIONS] -fi -bed -fo 

Options: 
	-fi		Input FASTA file
	-bed	BED file of ranges to extract from -fi
	-fo		Output FASTA file
	-name	Use the BED name field (#4) for the FASTA header

Program: genomeCoverageBed (v2.3.3)
Author:  Aaron Quinlan (aaronquinlan@gmail.com)
Summary: Compute the coverage of a BED file among a genome.

Usage:   genomeCoverageBed [OPTIONS] -i <bed> -g <genome>

Options: 
	-d		Report the depth at each genome position.
			Default behavior is to report a histogram.

	-max	Combine all positions with a depth >= max into
			a single bin in the histogram.
			- (INTEGER)

Notes: 
	(1)  The genome file should tab delimited and structured as follows:
	     <chromName><TAB><chromSize>

	For example, Human (hg19):
	chr1	249250621
	chr2	243199373
	...
	chr18_gl000207_random	4262

	(2)  NOTE: The input BED file must be grouped by chromosome.
	     A simple "sort -k 1,1 <BED> > <BED>.sorted" will suffice.

Tips: 
	One can use the UCSC Genome Browser's MySQL database to extract
	chromosome sizes. For example, H. sapiens:

	mysql --user=genome --host=genome-mysql.cse.ucsc.edu -A -e /
	"select chrom, size from hg19.chromInfo"  > hg19.genome


Program: intersectBed (v2.3.3)
Author:  Aaron Quinlan (aaronquinlan@gmail.com)
Summary: Report overlaps between a.bed and b.bed.

Usage:   intersectBed [OPTIONS] -a <a.bed> -b <b.bed>

Options: 
	-abam	The A input file is in BAM format.  Output will be BAM as well.

	-outbam	Write output as BAM. This will report those BAM alignments.
		that meet the intersect criteria.  BAM entry is written once.

	-wa	Write the original entry in A for each overlap.

	-wb	Write the original entry in B for each overlap.
		- Useful for knowing _what_ A overlaps. Restricted by -f.

	-u	Write the original A entry _once_ if _any_ overlaps found in B.
		- In other words, just report the fact >=1 hit was found.

	-c	For each entry in A, report the number of overlaps with B.
		- Reports 0 for A entries that have no overlap with B.
		- Overlaps restricted by -f.

	-v	Only report those entries in A that have _no overlaps_ with B.
		- Similar to "grep -v."

	-f	Minimum overlap required as a fraction of A.
		- Default is 1E-9 (i.e., 1bp).
		- FLOAT (e.g. 0.50)

	-r	Require that the fraction overlap be reciprocal for A and B.
		- In other words, if -f is 0.90 and -r is used, this requires
		  that B overlap 90% of A and A _also_ overlaps 90% of B.

	-s	Force strandedness.  That is, only report hits in B that
		overlap A on the same strand.
		- By default, overlaps are reported without respect to strand.


Program: linksBed (v2.3.3)
Author:  Aaron Quinlan (aaronquinlan@gmail.com)
Summary: Creates HTML links to an UCSC Genome Browser from a BED file.

Usage:   linksBed [OPTIONS] -i <input.bed> > out.html

Options: 
	-base	The browser basename.  Default: http://genome.ucsc.edu 
	-org	The organism. Default: human
	-db		The build.  Default: hg18

Example: 
	By default, the links created will point to the human (hg18) UCSC browser.
	If you have a local mirror, you can override this behavior by supplying
	the -base, -org, and -db options.

	For example, if the main URL of your local mirror for mouse MM9 is called: 
	http://mymirror.myuniversity.edu, then you would use the following:
	-base http://mymirror.myuniversity.edu
	-org mouse
	-db mm9

Program: maskFastaFromBed (v2.3.3)
Author:  Aaron Quinlan (aaronquinlan@gmail.com)
Summary: Mask a fasta file based on BED coordinates.

Usage:   maskFastaFromBed [OPTIONS] -fi -out -bed

Options:
	-fi		Input FASTA file
	-bed	BED file of ranges to mask in -fi
	-fo		Output FASTA file
	-soft	Enforce "soft" masking.  That is, instead of masking with Ns,
			mask with lower-case bases.

Program: mergeBed (v2.3.3)
Author:  Aaron Quinlan (aaronquinlan@gmail.com)
Summary: Merges overlapping BED entries into a single interval.

Usage:   mergeBed [OPTIONS] -i <input.bed>

Options: 
	-s	Force strandedness.  That is, only merge features
		that are the same strand.
		- By default, merging is done without respect to strand.

	-n	Report the number of BED entries that were merged.
		- Note: "1" is reported if no merging occurred.

	-d	Maximum distance between features allowed for features
		to be merged.
		- Def. 0. That is, overlapping & book-ended features are merged.
		- (INTEGER)

	-nms	Report the names of the merged features separated by semicolons.


Program: pairToBed (v2.3.3)
Author:  Aaron Quinlan (aaronquinlan@gmail.com)
Summary: Report overlaps between a BEDPE file and a BED file.

Usage:   pairToBed [OPTIONS] -a <BEDPE> -b <BED>

Options: 
	-abam	The A input file is in BAM format.  Output will be BAM as well.

	-outbam	Write output as BAM. This will report those BAM alignments.
		that meet the intersect criteria.  BAM entry is written once.

	-f	Minimum overlap required as fraction of A (e.g. 0.05).
		Default is 1E-9 (effectively 1bp).

	-s	Enforce strandedness when finding overlaps.
		Default is to ignore stand.
		Not applicable with -type inspan or -type outspan.

	-type 	Approach to reporting overlaps between BEDPE and BED.

		either	Report overlaps if either end of A overlaps B.
			- Default.
		neither	Report A if neither end of A overlaps B.
		both	Report overlaps if both ends of A overlap  B.
		xor	Report overlaps if one and only one end of A overlaps B.
		ispan	Report overlaps between [end1, start2] of A and B.
			- Note: If chrom1 <> chrom2, entry is ignored.
		ospan	Report overlaps between [start1, end2] of A and B.
			- Note: If chrom1 <> chrom2, entry is ignored.

		notispan	Report A if ispan of A doesn't overlap B.
			- Note: If chrom1 <> chrom2, entry is ignored.
		notospan	Report A if ospan of A doesn't overlap B.
			- Note: If chrom1 <> chrom2, entry is ignored.

Refer to the BEDTools manual for BEDPE format.


Program: pairToPair (v2.3.3)
Author:  Aaron Quinlan (aaronquinlan@gmail.com)
Summary: Report overlaps between two paired-end BED files (BEDPE).

Usage:   pairToPair [OPTIONS] -a <BEDPE> -b <BEDPE>

Options: 
	-f	Minimum overlap required as fraction of A (e.g. 0.05).
		Default is 1E-9 (effectively 1bp).

	-type 	Approach to reporting overlaps between A and B.
		neither		Report overlaps if neither end of A overlaps B.

		both		Report overlaps if both ends of A overlap B.
				- Default.
	-is	Ignore strands when searching for overlaps.
		- By default, strands are enforced.

Refer to the BEDTools manual for BEDPE format.


Program: shuffleBed (v2.3.3)
Author:  Aaron Quinlan (aaronquinlan@gmail.com)
Summary: Randomly permute the locations of a BED file among a genome.

Usage:   shuffleBed [OPTIONS] -g <genome> -i <bed>

Options: 
	-excl	A BED file of coordinates in which features in -i
			should not be placed (e.g. gaps.bed).

	-chrom	Keep features in -i on the same chromosome.
			- By default, the chrom and position are randomly chosen.

	-seed	Supply an integer seed for the shuffling.
			- By default, the seed is chosen automatically.
			- (INTEGER)

Notes: 
	(1)  The genome file should tab delimited and structured as follows:
	     <chromName><TAB><chromSize>

	For example, Human (hg19):
	chr1	249250621
	chr2	243199373
	...
	chr18_gl000207_random	4262

Tips: 
	One can use the UCSC Genome Browser's MySQL database to extract
	chromosome sizes. For example, H. sapiens:

	mysql --user=genome --host=genome-mysql.cse.ucsc.edu -A -e /
	"select chrom, size from hg19.chromInfo"  > hg19.genome


Program: slopBed (v2.3.3)
Author:  Aaron Quinlan (aaronquinlan@gmail.com)
Summary: Add requested base pairs of "slop" to each BED entry.

Usage:   slopBed [OPTIONS] -i <bed> -g <genome> [-b <int> or (-l and -r)]

Options: 
	-b	Increase the BED entry by the same number base pairs in each direction.
		- (Integer)
	-l	The number of base pairs to subtract from the start coordinate.
		- (Integer)
	-r	The number of base pairs to add to the end coordinate.
		- (Integer)
	-s	Define -l and -r based on strand.
		E.g. if used, -l 500 for a negative-stranded feature, 
		it will add 500 bp downstream.  Default = false.

Notes: 
	(1)  Starts will be set to 0 if the requested slop would force it below 0.
	(2)  Ends will be set to the chromosome length if the requested slop would
		 force it above the max chrom length.
	(3)  The genome file should tab delimited and structured as follows:
	     <chromName><TAB><chromSize>

	For example, Human (hg19):
	chr1	249250621
	chr2	243199373
	...
	chr18_gl000207_random	4262

Tips: 
	One can use the UCSC Genome Browser's MySQL database to extract
	chromosome sizes. For example, H. sapiens:

	mysql --user=genome --host=genome-mysql.cse.ucsc.edu -A -e /
	"select chrom, size from hg19.chromInfo"  > hg19.genome


Program: sortBed (v2.3.3)
Author:  Aaron Quinlan (aaronquinlan@gmail.com)
Summary: Sorts a BED file in various and useful ways.

Usage:   sortBed [OPTIONS] -i <input.bed>

Options: 
	-sizeA		Sort by feature size in ascending order.
	-sizeD		Sort by feature size in descending order.
	-chrThenSizeA	Sort by chrom (asc), then feature size (asc).
	-chrThenSizeD	Sort by chrom (asc), then feature size (desc).
	-chrThenScoreA	Sort by chrom (asc), then score (asc).
	-chrThenScoreD	Sort by chrom (asc), then score (desc).


Program: subtractBed (v2.3.3)
Author:  Aaron Quinlan (aaronquinlan@gmail.com)
Summary: Removes the portion(s) of an interval that is overlapped
		 by another feature(s).

Usage:   subtractBed [OPTIONS] -a <a.bed> -b <b.bed>

Options: 
	-f	Minimum overlap required as a fraction of A.
		- Default is 1E-9 (i.e., 1bp).
		- (FLOAT) (e.g. 0.50)

	-s	Force strandedness.  That is, only report hits in B that
		overlap A on the same strand.
		- By default, overlaps are reported without respect to strand.


Program: windowBed (v2.3.3)
Author:  Aaron Quinlan (aaronquinlan@gmail.com)
Summary: Examines a "window" around each feature in A and
		 reports all features in B that overlap the window. For each
		 overlap the entire entry in A and B are reported.

Usage:   windowBed [OPTIONS] -a <a.bed> -b <b.bed>

Options: 
	-w	Base pairs added upstream and downstream of each entry
		in A when searching for overlaps in B.
		- Creates symterical "windows" around A.
		- Default is 1000 bp.
		- (INTEGER)

	-l	Base pairs added upstream (left of) of each entry
		in A when searching for overlaps in B.
		- Allows one to define assymterical "windows".
		- Default is 1000 bp.
		- (INTEGER)

	-r	Base pairs added downstream (right of) of each entry
		in A when searching for overlaps in B.
		- Allows one to define assymterical "windows".
		- Default is 1000 bp.
		- (INTEGER)

	-sw	Define -l and -r based on strand.  For example if used, -l 500
		for a negative-stranded feature will add 500 bp downstream.
		- Default = disabled.

	-sm	Only report hits in B that overlap A on the same strand.
		- By default, overlaps are reported without respect to strand.

	-u	Write the original A entry _once_ if _any_ overlaps found in B.
		- In other words, just report the fact >=1 hit was found.

	-c	For each entry in A, report the number of overlaps with B.
		- Reports 0 for A entries that have no overlap with B.
		- Overlaps restricted by -f.

	-v	Only report those entries in A that have _no overlaps_ with B.
		- Similar to "grep -v."

